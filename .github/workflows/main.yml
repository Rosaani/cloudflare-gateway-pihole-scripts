name: Update Filter Lists

on:
  schedule:
    - cron: "0 3 * * 1"
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: production

jobs:
  cgps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: "mrrfv/cloudflare-gateway-pihole-scripts"
          ref: "v1"

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"

      - name: Install npm dependencies
        run: npm ci

      - name: Download allowlists
        run: npm run download:allowlist
        env:
          ALLOWLIST_URLS: ${{ vars.ALLOWLIST_URLS }}

      - name: Download blocklists
        run: npm run download:blocklist
        env:
          BLOCKLIST_URLS: ${{ vars.BLOCKLIST_URLS }}

      - name: Delete old rules and lists
        run: npm run cloudflare-delete
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_LIST_ITEM_LIMIT: ${{ secrets.CLOUDFLARE_LIST_ITEM_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Create new rules and lists
        run: npm run cloudflare-create
        env:
          BLOCK_PAGE_ENABLED: ${{ vars.BLOCK_PAGE_ENABLED }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_LIST_ITEM_LIMIT: ${{ secrets.CLOUDFLARE_LIST_ITEM_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send ping request
        if: env.PING_URL != ''
        run: |
          curl "${{ env.PING_URL }}"
        env:
          PING_URL: ${{ secrets.PING_URL }}

  keepalive:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Check commit
        id: check-commit
        run: |
          set +e && curl -f "https://raw.githubusercontent.com/${{ github.repository }}/refs/heads/keepalive/date" -o "date" && set -e
          f=date; d=$(date +%d/%m/%Y)
          if [[ -s $f && $(<"$f") =~ ^[0-9]{2}/[0-9]{2}/[0-9]{4}$ ]]; then
            sd=$(<"$f")
            (( ($(date +%s) - $(date -d "$sd" +%s)) / 86400 > 30 )) \
              && { export keep_alive=1; echo $d >"$f"; } \
              || export keep_alive=0
          else
            echo $d >"$f"; export keep_alive=0
          fi
      - uses: stefanzweifel/git-auto-commit-action@v5.0.0
        if: steps.check-commit.outputs.keep_alive == '1'
        with:
          branch: keepalive
          skip_checkout: true
          skip_dirty_check: true
          push_options: '--force'
          file_pattern: 'keepalive'
          commit_message: keepalive
